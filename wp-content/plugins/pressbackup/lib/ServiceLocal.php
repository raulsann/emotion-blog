<?php

class ServiceLocalPBLib
{

	private $local_folder = null;

	public function __construct( $local_folder = null )
	{
		$this->local_folder = rtrim( $local_folder, DS ) . DS;
	}

	public function checkPermissions($folder)
	{
		$folder = rtrim( $folder, DS ) . DS;
		return (@is_writable($folder) && @is_readable($folder));
	}

	public function checkExists($folder){
		return (@file_exists($folder));
	}

	public function isEmpty($folder)
	{
		$folder = rtrim( $folder, DS );
		return (($files = @scandir($folder)) && count($files) <= 2); 
	}

	public function putFile($file)
	{
		//fix for no occidental characers, basename and pathinfo remove them from $file
		$pathinfo = explode(DS, $file);
		$name = array_pop($pathinfo);

		//Check if already exist the file on folder
		if(file_exists($this->local_folder . $name)){
			return false;
		}

		return copy($file, $this->local_folder . $name);
	}


	public function getFile($name,$saveon)
	{
		//Check if already exist the file on folder
		if(!$this->checkExists($this->local_folder . $name)){
			return false;
		}

		return @copy($this->local_folder . $name, $saveon);
	}

	public  function deleteFile($name)
	{
		//Check if already exist the file on folder
		if(!$this->checkExists($this->local_folder . $name)){
			return false;
		}

		return @unlink($this->local_folder . $name);
	}

	public function getFilesList()
	{
		$files = @scandir($this->local_folder);

		if(!$files){
			return false;
		}

		$files_on_folder = array();

		foreach($files as $name){
			//check that the file is a valid backup generated by Pressbackup
			if (preg_match("/(.)+-backup_[0-9\-]+_(.)+.zip/i", $name)){
				$file = $this->local_folder . $name;
				$files_on_folder[] = array("name" => $name,"time" => filemtime($file),"size" => filesize($file));
			}
		}
		return $files_on_folder;
	}
}
?>
